/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ru.softlab.efr.common.dict.controllers;

import ru.softlab.efr.common.dict.exchange.model.CheckInvalidIdentityDocRq;
import ru.softlab.efr.common.dict.exchange.model.CheckInvalidIdentityDocRs;
import ru.softlab.efr.common.dict.exchange.model.UpdateListStatus;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.validation.BindingResult;
import org.springframework.data.web.PageableDefault;
import org.springframework.data.domain.*;

import java.util.*;

import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * the InvalidIdentityDocs API
 */
public interface InvalidIdentityDocsApi {

    /**
     * Проверка паспортных данных по справочнику недействительных паспортов 
     * @param checkInvalidIdentityDocRq Тело запроса проверки паспортных данных по справочнику недействительных паспортов  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/dictionaries/invalididentitydoc/check",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<CheckInvalidIdentityDocRs> checkInvalidIdentityDoc(@Valid @RequestBody CheckInvalidIdentityDocRq checkInvalidIdentityDocRq) throws Exception;



    /**
     * Получение текущего статуса процесса обновления справочника недействительных паспортов   
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/dictionaries/invalididentitydoc/status",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<UpdateListStatus> getInvalidIdentityDocUpdateStatus() throws Exception;



    /**
     * Запрос обновления списка недействительных паспортов   
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/dictionaries/invalididentitydoc/update",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<UpdateListStatus> updateInvalidIdentityDocList() throws Exception;


}
